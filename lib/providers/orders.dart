import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:shop_app/providers/carts.dart';
import 'package:http/http.dart' as http;

class OrderItem {
  final String id;
  final double amount;
  final List<cartItem> products;
  final DateTime date;

  OrderItem({this.id, this.amount, this.products, this.date});
}

class Orders with ChangeNotifier {
  List<OrderItem> _orders = [];

  List<OrderItem> get orders {
    return [..._orders];
  }

  final String authToken;
  Orders(this.authToken, this._orders);

  Future<void> fetchOrders() async {
    final url =
        "https://shop-app-a70e5-default-rtdb.firebaseio.com/orders.json?auth=$authToken";

    try {
      final response = await http.get(
        Uri.parse(url),
      );
      //print(json.decode(response.body));
      final List<OrderItem> loadedProducts = [];
      final extractedData = json.decode(response.body) as Map<String, dynamic>;
      extractedData.forEach((orderId, orderData) {
        loadedProducts.add(OrderItem(
          id: orderId,
          amount: orderData["amount"],
          date: DateTime.parse(orderData["date"]),
          products: (orderData["products"] as List<dynamic>)
              .map((item) => cartItem(
                    id: item["id"],
                    quantity: item["Quantity"],
                    price: item["price"],
                    title: item["title"],
                  ))
              .toList(),
        ));
      });
      _orders = loadedProducts.reversed
          .toList(); //reversed shows the latest order first.
      notifyListeners();
    } catch (error) {
      print(error);
    }
  }

  Future<void> addOrders(List<cartItem> cartproducts, double total) async {
    final url =
        "https://shop-app-a70e5-default-rtdb.firebaseio.com/orders.json?auth=$authToken";
    final timestamp = DateTime.now();
    final response = await http.post(Uri.parse(url),
        body: json.encode({
          "amount": total,
          "date": timestamp.toIso8601String(),
          "products": cartproducts
              .map((cp) => {
                    "id": cp.id,
                    "price": cp.price,
                    "title": cp.title,
                    "Quantity": cp.quantity,
                  })
              .toList()
        }));

    _orders.insert(
        0,
        OrderItem(
            id: json.decode(response.body)["name"], //autogenerated id
            amount: total,
            date: timestamp,
            products: cartproducts));

    notifyListeners();
  }
}
